front.datasource.names=db0,db1,db2
front.datasource.subdivision.number=3
front.datasource.type=DRUID

front.datasource.db0.driverClassName=com.mysql.jdbc.Driver
front.datasource.db0.url=jdbc:mysql://host:port/express?useUnicode=true&characterEncoding=utf8
front.datasource.db0.username=ytuat
front.datasource.db0.password=ytuat

front.datasource.db1.driverClassName=com.mysql.jdbc.Driver
front.datasource.db1.url=jdbc:mysql://host:port/express2?useUnicode=true&characterEncoding=utf8
front.datasource.db1.username=ytuat
front.datasource.db1.password=ytuat

front.datasource.db2.driverClassName=com.mysql.jdbc.Driver
front.datasource.db2.url=jdbc:mysql://host:port/express3?useUnicode=true&characterEncoding=utf8
front.datasource.db2.username=ytuat
front.datasource.db2.password=ytuat


#######################################################################################
####################        DRUID连接池配置        ######################################
#######################################################################################
# 初始化连接数量
druid.initialSize=4

# 最大并发连接数
druid.maxActive=20

# 最大空闲连接数
druid.maxIdle=2

# 最小空闲连接数
druid.minIdle=1

# 配置获取连接等待超时的时间
druid.maxWait=30000

# 超过时间限制是否回收
druid.removeAbandoned=true

# 超过时间限制多长
druid.removeAbandonedTimeout=180

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.timeBetweenEvictionRunsMillis=10000

# 配置一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTimeMillis=60000

# 用来检测连接是否有效的sql，要求是一个查询语句
druid.validationQuery=select 1

# 申请连接的时候检测
druid.testWhileIdle=true

# 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
druid.testOnBorrow=false

# 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
druid.testOnReturn=false

# 打开PSCache，并且指定每个连接上PSCache的大小
druid.poolPreparedStatements=true

druid.maxPoolPreparedStatementPerConnectionSize=20

# 属性类型是字符串，通过别名的方式配置扩展插件，
# 常用的插件有：
# 监控统计用的filter:stat
# 日志用的filter:log4j
# 防御SQL注入的filter:wall
druid.filters=stat